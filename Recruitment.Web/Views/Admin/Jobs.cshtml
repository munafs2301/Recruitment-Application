@model IEnumerable<Recruitment.Domain.Entities.Job>

@{
    ViewBag.Title = "Jobs";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

}

<h2 class="text-center">Jobs</h2>
<hr />
@if (Model.Count() > 0)
{
<table class="table">
    <tr >
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Company)
        </th>

        <th>Edit</th>
        <th>Info</th>
        <th>Delete</th>
    </tr>

    @foreach (var item in Model)
    {
    <tr >
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Company)
        </td>

        <td>
           
                @Html.ActionLink("Edit", "Edit", new { id = item.JobId }, htmlAttributes: new { @class = "btn btn-outline-warning" })
           
        </td>
        <td>
            @Html.ActionLink("Details", "Details", new { id = item.JobId }, htmlAttributes: new { @class = "btn btn-outline-info" })
        </td>
        <td>
            @Html.ActionLink("Delete", "Delete", new { id = item.JobId }, htmlAttributes: new { @class = "btn btn-outline-danger" })
        </td>
    </tr>
    }

</table>
}
else
{
<p class="text-capitalize text-center text-warning" style="font-family: cursive; font-weight: 500; padding: 50px;">There are no new jobs</p>
}
<hr />
<div>
    @Html.ActionLink("Back to Dashboard", "DashBoard", null, htmlAttributes: new { @class = "btn btn-outline-primary" })
    @Html.ActionLink("Add New Job", "Create", null, htmlAttributes: new { @class = "btn btn-outline-success" })

</div>
